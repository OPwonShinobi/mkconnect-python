import sys
sys.path.append("MouldKing")
from MouldKing.MouldKingCrypt3 import MouldKingCrypt3
from MouldKing.MouldKing_Hub_3 import MouldKing_Hub_3

enc_conn =      [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x4F,0x1E,0xBA,0x38,0xD1,0xFA,0xC7,0xE1,0xE8,0x46]
enc_A0_B0 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0x38,0xD1,0xFA,0x0B,0x2D,0xF3,0xBC]
enc_Af1_Bf1 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0x38,0x50,0xFA,0x8A,0x2D,0x32,0x18]
enc_Ar1_Br1 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0x38,0xAE,0xFA,0x74,0x2D,0x43,0x27]
enc_Ar1_Bf1 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0xB9,0xD1,0xFA,0x8A,0x2D,0xF6,0xA8]
enc_Af1_Br1 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0x47,0xD1,0xFA,0x74,0x2D,0xF0,0xB0]
enc_Af1_B0 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0x80,0x15,0xFA,0x77,0x2D,0x06,0xA8]
enc_Ar1_B0 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0x80,0xEC,0xFA,0x8E,0x2D,0x5E,0x8D]
enc_A0_Bf1 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0x63,0x15,0xFA,0x94,0x2D,0xDD,0x5D]
enc_A0_Br1 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x1E,0xBA,0x63,0xEC,0xFA,0x6D,0x2D,0x85,0x78]

enc_conn_2 =      [0x6d,0xb6,0x43,0xcf,0x7e,0x8f,0x47,0x11,0x4f,0x1b,0xf7,0x38,0xd1,0xfa,0x8f,0xe1,0xe3,0x09]
enc_Af1_Bf1_2 = [0x6d,0xb6,0x43,0xcf,0x7e,0x8f,0x47,0x11,0x83,0x1b,0xf7,0x38,0x50,0xfa,0xc2,0x2d,0x39,0x57]
enc_A0_B0_2 = [0x6d,0xb6,0x43,0xcf,0x7e,0x8f,0x47,0x11,0x83,0x1b,0xf7,0x38,0xd1,0xfa,0x43,0x2d,0xf8,0xf3]

enc_Af1_Bf1_3 = [0x6d,0xb6,0x43,0xcf,0x7e,0x8f,0x47,0x11,0x83,0x1e,0xc6,0x38,0x50,0xfa,0xf6,0x2d,0xa3,0xb5]

dec_conn_2 =      [0xaa, 0x06, 0x09, 0x80, 0x80, 0x00, 0xa5, 0x55]
dec_Af1_Bf1_2 = [0x66, 0x06, 0x09, 0x80, 0x01, 0x00, 0xe8, 0x99]
dec_A0_B0_2 = [0x66, 0x06, 0x09, 0x80, 0x80, 0x00, 0x69, 0x99]
dec_Af1_Bf1_3 = [0x66, 0x03, 0x38, 0x80, 0x01, 0x00, 0xdc, 0x99]

#               [0xaa,<identifier>,0x80, 0x80, 0x00, chksm,0x55]
dec_conn =      [0xaa, 0x03, 0x44, 0x80, 0x80, 0x00, 0xed, 0x55]#[170, 3, 68, 128, 128, 0, 237, 85]
dec_A0_B0 = [0x66, 0x03, 0x44, 0x80, 0x80, 0x00, 0x21, 0x99]#[102, 3, 68, 128, 128, 0, 33,  153]A0 B0
dec_Af1_Bf1 = [0x66, 0x03, 0x44, 0x80, 0x01, 0x00, 0xa0, 0x99]#[102, 3, 68, 128, 1,   0, 160, 153]A+1 B+1
dec_Ar1_Br1 = [0x66, 0x03, 0x44, 0x80, 0xff, 0x00, 0x5e, 0x99]#[102, 3, 68, 128, 255, 0, 94,  153]A-1 B-1
dec_Ar1_Bf1 = [0x66, 0x03, 0x44, 0x01, 0x80, 0x00, 0xa0, 0x99]#[102, 3, 68, 1,   128, 0, 160, 153]A-1 B+1
dec_Af1_Br1 = [0x66, 0x03, 0x44, 0xff, 0x80, 0x00, 0x5e, 0x99]#[102, 3, 68, 255, 128, 0, 94,  153]A+1 B-1
dec_Af1_B0 = [0x66, 0x03, 0x44, 0x38, 0x44, 0x00, 0x5d, 0x99]#[102, 3, 68, 56,  68,  0, 93,  153]A+1 B0 -- 124
dec_Ar1_B0 = [0x66, 0x03, 0x44, 0x38, 0xbd, 0x00, 0xa4, 0x99]#[102, 3, 68, 56,  189, 0, 164, 153]A-1 B0 -- 245
dec_A0_Bf1 = [0x66, 0x03, 0x44, 0xdb, 0x44, 0x00, 0xbe, 0x99]#[102, 3, 68, 219, 68,  0, 190, 153]A0 B+1
dec_A0_Br1 = [0x66, 0x03, 0x44, 0xdb, 0xbd, 0x00, 0x47, 0x99]#[102, 3, 68, 219, 189, 0, 71,  153]A0 B-1

A0_B0_5 =  [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x19,0xEA,0x38,0xD1,0xFA,0x5C,0x2D,0x75,0xA5]
A0_Bf1_5 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x19,0xEA,0x63,0x15,0xFA,0xC3,0x2D,0x5B,0x44]
A0_Br1_5 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x19,0xEA,0x63,0xEC,0xFA,0x3A,0x2D,0x03,0x61]
Af1_B0_5 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x19,0xEA,0x80,0x15,0xFA,0x20,0x2D,0x80,0xB1]
Ar1_B0_5 = [0x6D,0xB6,0x43,0xCF,0x7E,0x8F,0x47,0x11,0x83,0x19,0xEA,0x80,0xEC,0xFA,0xD9,0x2D,0xD8,0x94]

enc_A0_B0_5=   [0x66, 0x04, 0x14, 0x80, 0x80, 0x00, 0x76, 0x99]
enc_A0_Bf1_5 = [0x66, 0x04, 0x14, 0xdb, 0x44, 0x00, 0xe9, 0x99]
enc_A0_Br1_5 = [0x66, 0x04, 0x14, 0xdb, 0xbd, 0x00, 0x10, 0x99]
enc_Af1_B0_5 = [0x66, 0x04, 0x14, 0x38, 0x44, 0x00, 0x0a, 0x99]
enc_Ar1_B0_5 = [0x66, 0x04, 0x14, 0x38, 0xbd, 0x00, 0xf3, 0x99]
#              [0x66,<identifier>,<b  >,<a >, 0x00, chksm,0x99]
# seems mk3 app not possible to engage motors at anything less than 100% speed

# result = MouldKingCrypt3.Decrypt(enc_Af1_Bf1)
# result = MouldKingCrypt3.Crypt(dec_Af1_Bf1)
hub = MouldKing_Hub_3()
result = hub.GetCmdPacketWithDefaultId(0,0)

if result is not None:
    print('[0x' + ', 0x'.join(f'{x:02x}' for x in result) + "]")
else:
    print("no result")

